#+TITLE: elnode
#+AUTHOR: DarkSun
#+CATEGORY: emacs
#+DATE: [2015-07-30 周四 10:12]
#+OPTIONS: ^:{}

* elnode介绍
elnode是一个用elisp实现的,类node.js的webserver. 它可以让Emacs提供web服务.

默认情况下,elnode为 ~/public_html目录下的文件提供服务. 且默认的端口为8000.

可以通过配置变量`elode-webserver-docroot'来设置为哪个目录下的文件提供服务.

* 安装Elnode
可以从[[http://marmalade-repo.org/packages/elnode][Marmalade]] 处安装Elnode,方法为:

1. 在~/.emacs或~/.emacs.d/init.el中添加下段代码
   #+BEGIN_SRC emacs-lisp
     (add-to-list 
      'package-archives
      '("marmalade" . "http://marmalade-repo.org/packages/"))
   #+END_SRC

2. 重启emacs

3. 执行M-x list-packages

4. 在弹出的列表中找到Elnode

5. 将光标放到Elnode行,然后按下i键或RET键安装之

* 配置
elnode中的配置都可以通过 =M-x customize-group elnode= 来进行.
* 如何起停elnode服务
** 如何启动新的elnode服务器
*** 使用Elnode最简单的方式是将其作为普通webserver来用:
#+BEGIN_EXAMPLE
  M-x elnode-make-webserver [RET] 
  Serve files from: [enter directory] [RET]
  TCP Port (try something over 8000): 8009 [RET]
#+END_EXAMPLE
则会启动一个Elnode服务器,监听8009端口,并为指定的目录提供发布服务.

默认情况下,Elnode使用`elode-init-host'变量所指定的host(默认为"localhost")作为提供服务的host address.

使用 =C-u M-x elnode-make-webserver= 可以在创建webserver时指定host address
#+BEGIN_EXAMPLE
  C-u M-x elnode-make-webserver [RET] 
  Docroot: [enter directory] [RET]
  Port: 8009 [RET]
  Host: 0.0.0.0
#+END_EXAMPLE
*** Basic Elnode For Programmers
可以自定义一个处理器函数:
#+BEGIN_SRC emacs-lisp
  (defun my-test-handler (httpcon)
    "Demonstration function"
    (elnode-http-start httpcon 200 '("Content-type" . "text/html"))
    (elnode-http-return httpcon "<html><b>HELLO!</b></html>"))
#+END_SRC

然后使用该处理器函数作为新启动的elnode服务程序
#+BEGIN_SRC emacs-lisp
  (elnode-start 'my-test-handler :port 8010 :host "localhost")
#+END_SRC

当然也可以将`elnode-start'作命令来使用: =M-x elnode-start= ,然后输入处理器函数和监听端口即可.

** 如何关闭elnode服务器

使用 =(elnode-stop 8010)= 或命令 =elnode-stop= 后输入服务端口,即可关闭elnode服务.

例如 =M-x elnode-stop RET 8001 RET= 关闭上面启动的elnode服务.
** 列出Elnode起了哪些服务器
使用命令 =M-x list-elnode-servers= 会弹出一个名为"*Elnode Servers*"的buffer.

在buffer中列出了TCP端口和相应的处理器.

按下RET变回跳转到对应处理器的源代码定义.

按下`k'关闭相应的server
* API
** Mapping paths to handlers
函数`elnode-hostpath-dispatcher'接收一个path/handler的映射alist,并根据该映射关系将指定的URL请求转到对应的处理器函数来处理.

#+BEGIN_SRC emacs-lisp
  (defvar my-app-routes 
    '(("^my-host.example.com//wiki/\\(.*\\)" . elnode-wikiserver)
      ("^admin.example.com//admintool/\\(.*\\)" . user-admin)
      ("^.*//\\(.*\\)" . elnode-webserver)))

  (defun root-handler (httpcon)
    (elnode-hostpath-dispatcher httpcon my-app-routes))

  (elnode-start 'root-handler :port 8009)
#+END_SRC
