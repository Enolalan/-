step1：建立源物理文件用于存放RPG源代码
step2：建立RPG源代码的member
step3：member名称规则一般为：R+代表业务功能的2位码+A/B/C等表示编号的字母+SRC代表源代码
step4：打开seu进行编辑
step5：先人工填写每行的类型（F声明使用到的文件、D数据定义、C代码段：严格按照先F再D再C的顺序写，不能调换顺序也不能交叉着写），再按F4出现填写格式编辑器
step6：赋值一般使用EVAL语句，只有在需要进行类型转换的时候才用MOVE
step7：变量一般采用六位且前两位相同
step8：strdbg开启调试状态
step9：生成的物理文件与其对应的逻辑文件一般放在一个库中

//查询操作时，RPG的CODE段分为数据初始化部分和查询部分
	//数据初始化部分
	step1、对所有输出DS进行CLEAR操作
	step2、键入	CALL 'CMGTDTR'
			PARM            O1TRDT
			TIME		O1TRTM(TRDT与TRTM是所有O1文件中必须有的)
	step3、进行检查工作
	//取查询信息
	

ADD(H)表示后面位数进行四舍五入	ADD：直接舍去
EVAL(H)进行四舍五入		EVAL：直接舍去
CHAIN(N)仅查询记录，不锁记录
READ(N)文件以修改方式声明,但是READ操作不锁表
为什么要分文件名和文件格式名呢？
循环中ITER=reurn，LEAVE=break
EVAL进行左对齐赋值，MOVE进行右对齐赋值（当被赋值因子比赋值因子长时，被赋值因子的左位可能保存不变，使得赋值结果错误！！）

CALL调用的程序名，要区分大写小

READ后面跟的，必须是声明的文件记录格式名；
CHAIN的Factory 2项中，要填文件的记录格式名，而不是文件名
CLEAR的目标，可以是程序中定义的结构、文件的记录格式名
DELETE		文件记录格式名
EXFMT		记录格式名
READ		文件记录格式名:EQ指示器为是否读到指示器。当未读到任何记录时，打开EQ指示器
SETGT		文件记录格式名:将游标定位到大于键值的第一条记录前
UNLOCK	文件记录格式名
UPDATE	文件记录格式名
在某种程度上，可以将UNLOCK视为ROLBK，将UPDATE视为COMMIT。
WRITE		文件记录格式名


OPEN后面的目标，必须是在当前程序中已声明的文件名
CLOSE所对应的，是文件名，不是文件的记录格式名，要注意


%SUBST方法
取子字符串:EVAL		FLD02=%SUBST(FLD01:3:2)第三位开始取两位
%SUBST还有一种用法，就是对字符的指定位置赋值:
EVAL		%SUBST(FLD02:3:2)='01'
MOVEA		*ALL'XY'		ARR(X)（从第X元素开始，ARR的其余部分是‘XY’的循环即XYXYXYXYXY…）
%TRIM（string）去掉字符串的前导和末尾空格
factor1  CAT  factor2   result 时，factor1+factor2的值，左覆盖到result上，result右边多余的位保留值不变
factor1  CAT(P)  factor2   result 时，factor1+factor2的值，左覆盖到result上，result右边多余的位用空格代替


SETLL与SETGT只是对文件记录进行定位，并没有读记录，必须结合使用READ或READP等读记录语句一起使用，使用的文件必须带键值！！


每一个程序中都可以有一个特殊的子程序*INZR，它无论被放在程序的什么部分都会被首先执行(相当于Main函数)
*INZR		BEGSR
		………
		ENDSR
程序例外出错检测子程序，当程序发现例外出错时，自动执行该子程序，做出下一步处理
*PSSR  		BEGSR
		......
		ENDSR


当运行程序时，使用CL CALL命令的PARM选项来向ILE程序传递参数。
CALL  PGM(程序名)
      PARM(参数1，参数2，……，参数n)
也可以只键入参数而不指定键字。
CALL     库/程序名(参数1，参数2，……，参数n)	//区分大小写
CALLB     调用连接的过程			//区分大小写
调用时，若某些参数不指定，则用*OMIT，以此来表示该参数忽略.如果指定了*OMIT，那么PARM操作的因子1和因子2必须为空。

SETGL HI:没找到记录LO:文件被锁

RPG中，变量名相当于指针，当变量名相同时，指向的是同一块地址，即变量名相同，代表的东西也相同


DGNXSRC/REDASRC/2801
Q&A:
什么是键值?是一定要用K定义的键才能说有键值吗?
答:对,如果一个逻辑文件中没有定义K,那么这个逻辑文件没有键值.所有定义K的键的值的集合为键值
CHECK与SCAN的区别?
答：CHECK是检查单个字符，而SCAN是检查子字符串。
使用SETGT对多键值进行定位时,是如何定位的?是记录中所有的键指都要大于指定的KLIST里的值吗?
答:先对第一个键值进行比较,如果等于再对第二个键值比较.不需要每个键值都大于指定的值.
什么是输出规范表





ADDBKP:要调试的程序添加断点
逻辑判断的值为字符形，因此RES的值就是三个逻辑判断的结果的连接，‘010’