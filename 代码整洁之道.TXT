1、过程式代码（使用数据结构的代码）便于在不改动既有数据结构的前提下添加新函数。面向对象代码便于在不改动既有函数的前提下添加新的类反过来说，过程式代码难以添加新数据结构，因为必须修改所有函数。面向对象代码难以添加新函数，因为必须修改所有类。
2、得墨尼耳律认为，模块不应该了解他所操作对象的内部情况。
更准确地说，类C的方法f只应该调用一下对象的方法
a、C对象
b、由f创建的对象
c、作为参数传递给f的对象
d、由C的实体变量持有的对象
即方法不应调用由任何函数返回的对象的方法。换言之，只跟了解的对象交互，不跟陌生（朋友的朋友也是陌生人）对象交互。依靠你能控制的东西好过依靠你控制不了的东西。
3、不要返回null值
如果你打算在方法中返回null值，不如抛出异常，或是返回特例对象。
4、我们建议不要将MAP或在边界上的其他接口在系统中传递。如果你使用类似MAP这样的边界接口，就将它封装在类中。避免从公共API中返回边界接口，或将边界接口作为参数传递给公共API
5、据Kent所述，只要遵循一下规则，设计就能变得简单：
a、运行所有测试
b、不可重复
c、表达了程序员的意图
d、尽可能减少类和方法的数量
e、以上规则按其重要程度排列
6、提高表达力
a、可以通过选用好名称来表达
b、可以通过保持函数和类尺寸大小来表达
c、可以通过采用标准命名法来表达
d、编写良好的单元测试也具有表达性，即通过实例起到文档的作用
